<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        XgUsYgUtZwYuawUubgUvcgQwdAUxdwUyegUyfAY0fgc/eSu5vbnKy8vIyMi+vr7ExMWysrKUlZWztLTm
        5+fl5ubl5eXi4+O+vr47Ozs/Pz8+Pj45Ojo0NDRycnLa29vY2dnV1tbT1NTT09PHyMc2XicoWwImVwEk
        VAIjTwEhSgFlsNQVhcRuy/EjibgqWQcsYQYuZgcuawcvbgcwcQYxdAUydwY0ewc0fgg1gAg0fQmosKbR
        0tLLzc3IycnOzs6vsLClpaW9vb3CwsLl5ubo6enq6+vs7Ozr7Oy9vr5nZ2dPT09ISEhBQUG5ubng4OHd
        3t7a3NzY2dnX19fV1taCjX8pXQMnWQIlVgIkUQIhSgJlstUXiMZwzvInjrstXQkvZAgwaggwbQkycQoz
        dAk0dwk1ewg2fgk3gQk3ggqJnIXW19fS09POz8+4t7nFxMbCwsLIyMjHx8fGxsbX2Njx8fHw8PDv7+/u
        7u7t7e3o6OjDxMR/gIBeXV7i4+Pj5OTi4uLe4ODc3t7b3NzZ2tq+wb4mWwInWwIlWAElVAIiTQNmtdYY
        jch00/Qrk70vYAwxaAsybQszcAw0bhEzZxU1ahQ4fgs5ggw6hg1oi17Y2dja29rU1dXMy8taXKHDxcjR
        0dHO0NDKy8vJysrIyMjw8fDy8vLx8fHw8fHw8PDu7u7t7e3r7OzNzs3o6Onn6Ojl5ubi5OTh4+Pg4eHe
        39/a29tpfGUoXgInWgIlVgEiTwJouNgcksx21vUwl78xYw40aw01cA4zaxA1cRE5chU5dxQ2dhA6fxFI
        gDLQ09Dg4ODb29zW2NeBeZ8jbKrIysvS0tLV1dXO0NDNzs7LzMzh4eHy8vLy8vLx8vLx8fHx8fHw8PDu
        7+/t7e3r6+zq6urp6enm6Ojl5ubj5OTi4+Pg4eKxtLAlVgMoXAImVwEjUQJou9kel8562vY0m8I0ZxE4
        bxE1aBU6cxY5chc8dBk9eBo9fRY5dBe/xL3j5OTg4eHc3N2ooq8gYLAabqjS1tjV1tbY2dnT1NXR09PP
        0dHS0tL09PTz8/Pz8/Py8vLy8vLy8vLx8fHw8PDv7+/t7e3r6+vq6+rp6enn5+fl5ubk5OTb3NxJZz8l
        VgQmWAEkUgJqvtoinNF/3/g7ocQ4axU6chU9cxo8exY9fxY/gRc/ghY/hBadrJnv7+/o6enh4uLHxMch
        QaIqhLIYW7Hd4ODZ2dnW1tba29vV19fU1dXT1NTq6ur09PTf39/Z2tnz8/Pz8/Pz8/Py8vLx8fLw8fDv
        7+/t7e3r7Ozq6+rp6enn5+fl5uZnemIqWgknWwIkUwJrwdwlodOD4/pAp8Y7bxg9dhk/ch89eRk9ehlB
        hBpBhBl0jmvs7ezw8fDu7u7f3dxxgLIfY61SdJgcbpzh4+Pd3d3a29vGxcba29vZ2dnX2Njd3d329/eW
        lpY5Ojno6Oj09PTz9PPz8/Py8/Py8vLx8fHw8PDu7u/t7e3r7Ovo6ei4v7YsXAspYAMoWwIkVANsw90n
        pdWH5vtFqsg9chtAehtDfh5CeCNEgCJEhx1Sgz3i5OHy8vLx8fDs6+vTyMO3srWCjZ1Sfqcqf6Tl5ubf
        4ODe3t6Dprrc4OLd3d3b3NzZ2dnx8fHm5ubHx8fk5OT19fX09PT09PT09PTz8/Pz8/Py8vLx8fHl5uSt
        u6pPcUMwZA0rZgMqYgMoXAIlVQJux98qqtiL6vtLrslAdR9CfR5DgR5IhCREgyBFhCHK0Mjr7PHi4u/x
        8fHW1tbO0tG2raxdkbMvgKMabZPo6eni4+Ph4eF7pLq2yNDh4eHf4ODe39/n6Ofz8/PNzs6ysrL29/b2
        9vb19fX09PT09PT09PTq6+vZ2dm0t7QqaAYzcA0tbAUqZwMpYgMoXQIlVQJwyeAtrtqO6/xOsMpEeSNG
        gCJGhCJJiSVHeymptqXj5PNERt+lpujm4+Dd5erS3uS/ydBQmq9Cdog0dqDt7e3m5ubj4+N4ipRpfKTm
        5+fj5OPi4+Pf4OD19fXl5eXAwMD39/f29vb29vb09PTo6OjX19fNzs7Ly8vIycl1inIsbgQsbAQrZwMp
        YgMnXQIlVQJwy+IwstyR7PxRsstIfCdJgyZKiCZMjCiCnnnw8PDOzuq9vuqzsdzl4+nGxum8vOPl4+F/
        jJFNmcF2kMXx8vHu7+7p6el7jZhMYIXMxsTm5+fm5ubk5eXt7e339/fj4+P39/fj4/Goqd3Y2tzU1dbS
        09TP0dHNzs7LzMyusq4rawQtawQrZwMpYgMnXAIkVQJwzOIytd6S6/xVsstOgSxNhytOjCxckUXn6ebZ
        2fC7vOjMzOfc2N9aXOFER96Cgtvm4d3PxLvKzMyOrbvy8vLx8fHw8PCWqa9QdJubh4/q6uro6Ojn6Ojn
        6Ojz9PPu7vKTlN4UE9SEhdfb3NzY2dnW19fT1NXR0tLOz8/KzMxjflwsawQrZgMpYQImXAIkVQJxzeMy
        td6T6vxYssxShDFTjDBUkTKMr4Dv7/XR0vLi4vLq5uTr6eyvsOxPU+GMjeHi3Njh29jk5eXZ1dLz9PPz
        8/Px8vG1nZOAhotTfLTa6e7v7+/t7e3q6uro6Ojm5ubf4OKtrd+vsN/f4ODd3t7a29vX2dnW19fV19bV
        1taqsKoqagQqZgMoYQMnXAEkVAJwzOMwtN6V6fxcs81XiDdZkDdalThcmjnO28ns7PXu7vb29vbt6+nq
        5uS+v+zU1OrSx7/Xzsnk4d/RxsH09PTz8/Py8vLe2tjNxchdob6+xcjz8/Py8vLx8fHw8PDv8PDt7u7s
        7Ozq6+vp6enn6Ojm5ubl5ubj5OTh4eLf4ODZ2tpJbz8qZgIpYAInWwIkVAJvyeEtsNyV6Pxfs85cjD1e
        lD1gmD5inT9joUCwyaf09fP39/f29vbz8vHe3NuJvNZykL+qpq3Nw7rSxr/19fXs7e3y8vLg3Nra2tri
        2dTKu7Ly8PD09PTBwenr6/Dx8fHw8PDv7+/v7+/t7u7r6+vq6uro6enn5+fl5eXj4+Pg4eGMnogqZQIo
        XwImWgIkUwJuxN8nqNqX6PxktM9ikEVmmEVnnUVooUZppUZqqEeVvoXs8ev29vb29vb09PTK0tRlrsxZ
        mc1NfrqHka/q6uqIiIjCwsKppKKDg4Ojo6Pg1tDr6ejv7/RRU+DR0u7z8/Py8vLx8fHw8PDv7+/u7+7t
        7e3r7Ozq6+rp6eno6OjGzsQ9biwpZAInXgImWQEkUwJqwN4jotib5/xpts9olExrm01tn01upU1vqE5v
        rE1wr058tWLb59j29vb19fXz8/Pg5eZ9utJVvuSU0ur09fWhoaHc3NvGxMJnZ2ewsLDi2dPe0cny8/Lr
        6/Pr7PP09fTz9PTy8/Px8vLx8fHw8PDv8O/u7u7r7OvCzL9ykmksbAQraAMpYwInXQImWQIjUgJpvd0f
        nNec6PxvuNBumFNwnlNzo1N0qFN1rFR2r1Z2slV0tFNzs1DC2br29vbz8/Py8vLo6Oeayt6i3PX19fXA
        wMHf3dv08/Hc3Nzz8/N2lc43e83I0erk5PLMzO7e3vD19fX09PTz9PPy8vLx8fHq7eq1xbFbik4vdAQt
        bwMsawQrZgMpYQInXAImVwIjUAJnu9wdmNSg6Px0utJ1nFt3o1p4p1p7q1t9rmF9pmd9p2V6tll3t1R1
        t1Kly5fu8u3z8/Lw8PDu7u7f4uTv7+/BwcHDwsHm4d/m4uDe293K3ue81eG+0dv29/j39/fOz+7z8/T2
        9vb19fXk6OOjuZ1Hhi4zfAYxdwQvcgQtYQsqWgopWwYpXwInWgIlVgEjTwNmudscltSi6fx3vNN9oGN/
        p2N/rGKArGSCsWWFsmyDtGh+tGF7tVx4uVV2uFKMwXbg6t3x8fHv7+/v8O/39/bNzc3e3t729vb19fX0
        9PT09PTz8/Py8vL09PT39/fm5vTy8/Xz9PPr6+uTqY82gQk0fQgyeQYwdAUsawUvZAorXgcrXgYoWwIn
        WQImVQIjTgNmudsbk9Km6fx9v9SEpWyHqmyGqHCIsG+IsHCKtHKHsG+Es2l/sGV8s114uVV1t1F4uFjK
        3cXv8PDv8PD4+Pj4+Pj39/f29/b29vb29vb19fX09PTz8/Pz8/P29/f09PTt7e3p6enm5+eGpH40fggz
        egYxdQYvZAwvZgwvYQ0vXg0rWwkpVwglUQUlUwMiTANlt9saktKp6/yFwtaLqHWOr3eRs3qRuniQvHeR
        vneOvHKIvGqDumOBtGR6uld2t1JztU5us0mrzaDa4tipxp9orUeBuWmMvHuMuH+KrX+KrX6Krn+Vu4mm
        xJyow6GnwKKnvqKluqGSrYw1fgk0fAgydwYwbwkwbAktawYsaAQsZAYqXwMoWgMnVAckUQMhSgNYs9oZ
        kNCw6/mQ0OWPpnyVs3+YtISZvIOYvoGVv32RvniMu3CHuWqDtGd7uVp3uFR0tlBvs0trsUZpsUJlrjxg
        qzhcqTNYpi1VpClVmS9Sky5QmyRJmBxFlRpCkBZAjRQ9ihI6hg83gQw1fQkzeQcxdgYycQwsZgctagUs
        ZQUqYQUpXQQnWAMmUAckUAMeRANHs+Majsyz4+ec4vaRqJicuImgvI2fuI2fvIycwYWYwICSs32NtXWD
        umR7uFx3tlZ0tVFws01tsEhprkRlrD5gqjlcpzNYpS9UoSpRniZPnCNLmR9IlhxFkhpCjxc/ihQ8hxI5
        gg43fgs0eQkxdQcwcgYubgYvYQ4sZQYsYgUqXQQoWgMkUwQoTwgjTAIvbHQsr+oagLa72c2p7P2ZwMqh
        tpClwJOkwJGjwY+hwYqbwIOUuX2Lum+EuGZ9tl55tFh0slRxsU5tr0ppq0VkqT9hqDpdpTVXojBUnytQ
        nCdMmCNKliBHkx1FjxpCixc/hxQ7gxE5fw82egwzdQowcggvbgYtawYvZggqWQsqXQUpWwQmVAQoTwsk
        TgMgRQQmkL4epuccZoiswZ/A8Pqv6Peesqypvpepw5emvpWivo6buIeWuX2LuW+Ft2h/tGB7slp2sVZx
        r1BtrUxpq0ZlqEJgpT1cojdYoDJUnSxQmSdMliNJkyBHkB5EjBpBiBg/hBU7fxI4ew81dw0ycwowbwgv
        bActaAUsZAYtYAkpVQwmVQQqUQwkTgMiSQMbXnofpuYemtkgSzKvwZ3H39K88v2v5PGitK+mupeow5al
        vpGevIiTuXmLtnCGtWmAsmJ9sV13r1dyrFJtqk5oqEhlpkNhoz5doDpZnTRUmS5QlilMkyVIkCFGjB9D
        iRxAhBk9gBY5fBM1dxAzcw4xbwsvawguaActZAYrYAYrXQYsWwwqUA4nUAUfQwQWUG0en94gqOckd5Mi
        RwO2x6e5y6zP6eK/8/6y6fahwsqbq5yarYqVroKOq3mHp3KApGp7oWN1n15wnFhrmVNnl09hk0pdkkRZ
        jj9ViztRiDZMhDFIgCxDfCdAeiQ9diA5chw2bxkzahYwZhMtYxEqXw4oWwsnWAomVQglUwgkTwciTAYg
        RwYdPwUXO0IYb58fpOMorOo0l7kjRwMjRwS9zLDA0Le/0LbO49jJ9Pqz8f2n5PSc0eKWyNeOxNCHwM6C
        vc19u8x3ucxyt8putclqtMhotMhls8dis8dgs8Vfs8Ves8RbssNZsMJWr8JRrMBJp75EpL0/ob06nrs3
        nLo0mrowlrktlLkrkrkpkLgmjbYlirUki7sfksgjp+Mjse5Ou+tNmakiRwQjSAQiRwPC0bnF1L7D07u8
        zbC5y6/F39TC6uzC8vy68P217/yx7vyu7fys7fyp7P2m6/2j6/yj7Pyh7Pye7Pye7f2d7/2f8fyf8f2d
        8f2c8f2a8P2X7/2S7fyN6vyK5/yG5fuE5PuB4ft/3/t93ft62vp52Pl41vl30/h20Pd4z/Rqu9trqbc4
        YU0jRwQiRgMiRgMhRQMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>